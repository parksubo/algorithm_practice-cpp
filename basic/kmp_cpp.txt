#include <iostream>
#include <vector>

using namespace std;

vector<int> makeTable(string pattern) {
	int patternSize = pattern.size();
	vector<int> table(patternSize, 0);
	int j = 0; // 최대 일치 길이
	for (int i = 1; i < patternSize; i++) {
		while (j > 0 && pattern[i] != pattern[j]) {
			j = table[j - 1];
		}
		if (pattern[i] == pattern[j]) table[i] = ++j;	// j번째와 i번째 문자가 일치한다면
	}
	return table;
}

void KMP(string parent, string pattern) {	// parent 문자열에 pattern이 있는지 확인
	int parentSize = parent.size();
	int patternSize = pattern.size();
	vector<int> table = makeTable(pattern);
	int j = 0;
	for (int i = 0; i < parentSize; i++) {
		while (j > 0 && pattern[j] != parent[i]) {
			j = table[j - 1];
		}
		if (pattern[j] == parent[i]) {
			if (j == patternSize - 1) {	// 전부 일치한다면
				cout << i - (patternSize - 1) + 1 << "번째에서 발견 되었습니다." << endl;
				j = table[j];
			}
			else j++;
		}
	}


}


int main() {
	string parent = "ababacabacaabacaaba";
	string pattern = "abacaaba";
	KMP(parent, pattern);
	return 0;
}